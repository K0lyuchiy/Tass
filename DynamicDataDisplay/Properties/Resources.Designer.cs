//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.17929
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.Research.DynamicDataDisplay.Properties {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.Research.DynamicDataDisplay.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на is in «Auto Fit» mode by default. Using mouse with.
        /// </summary>
        internal static string About_1 {
            get {
                return ResourceManager.GetString("About_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Mouse drag.
        /// </summary>
        internal static string About_10 {
            get {
                return ResourceManager.GetString("About_10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на — Select an area with current aspect ratio.
        /// </summary>
        internal static string About_11 {
            get {
                return ResourceManager.GetString("About_11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на — Select an area to zoom in.
        /// </summary>
        internal static string About_12 {
            get {
                return ResourceManager.GetString("About_12", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на — Fit to view.
        /// </summary>
        internal static string About_13 {
            get {
                return ResourceManager.GetString("About_13", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на — Copy screenshot of chart to clipboard.
        /// </summary>
        internal static string About_14 {
            get {
                return ResourceManager.GetString("About_14", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на — Save screenshot of chart.
        /// </summary>
        internal static string About_15 {
            get {
                return ResourceManager.GetString("About_15", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на or.
        /// </summary>
        internal static string About_2 {
            get {
                return ResourceManager.GetString("About_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на pressed down you can manually select an area to display..
        /// </summary>
        internal static string About_3 {
            get {
                return ResourceManager.GetString("About_3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Mouse wheel.
        /// </summary>
        internal static string About_4 {
            get {
                return ResourceManager.GetString("About_4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на and.
        /// </summary>
        internal static string About_5 {
            get {
                return ResourceManager.GetString("About_5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на .
        /// </summary>
        internal static string About_6 {
            get {
                return ResourceManager.GetString("About_6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на keys  —  Zoom in/Zoom out.
        /// </summary>
        internal static string About_7 {
            get {
                return ResourceManager.GetString("About_7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Mouse drag.
        /// </summary>
        internal static string About_8 {
            get {
                return ResourceManager.GetString("About_8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на — Pan the display area.
        /// </summary>
        internal static string About_9 {
            get {
                return ResourceManager.GetString("About_9", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на About DynamicDataDisplay.
        /// </summary>
        internal static string AboutTitle {
            get {
                return ResourceManager.GetString("AboutTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Array height should be positive..
        /// </summary>
        internal static string ArrayHeightShouldBePositive {
            get {
                return ResourceManager.GetString("ArrayHeightShouldBePositive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Array width should be positive..
        /// </summary>
        internal static string ArrayWidthShouldBePositive {
            get {
                return ResourceManager.GetString("ArrayWidthShouldBePositive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Assertion failed..
        /// </summary>
        internal static string AssertionFailed {
            get {
                return ResourceManager.GetString("AssertionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Assertion failed - search for reasons in code, that is calling method, where this assertion is performed.
        /// </summary>
        internal static string AssertionFailedSearch {
            get {
                return ResourceManager.GetString("AssertionFailedSearch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Cannot determine desired type of output image by given file extension..
        /// </summary>
        internal static string CannotDetermineImageTypeByExtension {
            get {
                return ResourceManager.GetString("CannotDetermineImageTypeByExtension", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Cannot get last element of empty list..
        /// </summary>
        internal static string CannotGetLastElement {
            get {
                return ResourceManager.GetString("CannotGetLastElement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Cannot modify an empty rect..
        /// </summary>
        internal static string CannotModifyEmptyRect {
            get {
                return ResourceManager.GetString("CannotModifyEmptyRect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Copy screenshot.
        /// </summary>
        internal static string ContextMenuCopyScreenshot {
            get {
                return ResourceManager.GetString("ContextMenuCopyScreenshot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Copy screenshot of charts to clipboard.
        /// </summary>
        internal static string ContextMenuCopyScreenshotTooltip {
            get {
                return ResourceManager.GetString("ContextMenuCopyScreenshotTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Fit to view.
        /// </summary>
        internal static string ContextMenuFitToView {
            get {
                return ResourceManager.GetString("ContextMenuFitToView", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Make visible area fit to display entire contents.
        /// </summary>
        internal static string ContextMenuFitToViewTooltip {
            get {
                return ResourceManager.GetString("ContextMenuFitToViewTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Place marker.
        /// </summary>
        internal static string ContextMenuPlaceMarker {
            get {
                return ResourceManager.GetString("ContextMenuPlaceMarker", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Place marker, please.
        /// </summary>
        internal static string ContextMenuPlaceMarkerTooltip {
            get {
                return ResourceManager.GetString("ContextMenuPlaceMarkerTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Quick help.
        /// </summary>
        internal static string ContextMenuQuickHelp {
            get {
                return ResourceManager.GetString("ContextMenuQuickHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Show brief instructions.
        /// </summary>
        internal static string ContextMenuQuickHelpTooltip {
            get {
                return ResourceManager.GetString("ContextMenuQuickHelpTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Save screenshot.
        /// </summary>
        internal static string ContextMenuSaveScreenshot {
            get {
                return ResourceManager.GetString("ContextMenuSaveScreenshot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Specify name of image file to save screenshot to.
        /// </summary>
        internal static string ContextMenuSaveScreenshotTooltip {
            get {
                return ResourceManager.GetString("ContextMenuSaveScreenshotTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Each transform in transforms should not be null..
        /// </summary>
        internal static string EachTransformShouldNotBeNull {
            get {
                return ResourceManager.GetString("EachTransformShouldNotBeNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Extension cannot be null or empty..
        /// </summary>
        internal static string ExtensionCannotBeNullOrEmpty {
            get {
                return ResourceManager.GetString("ExtensionCannotBeNullOrEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Filepath cannot be null or empty..
        /// </summary>
        internal static string FilePathCannotbeNullOrEmpty {
            get {
                return ResourceManager.GetString("FilePathCannotbeNullOrEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Horizontal axis can be placed only from bottom or top..
        /// </summary>
        internal static string HorizontalAxisCannotBeVertical {
            get {
                return ResourceManager.GetString("HorizontalAxisCannotBeVertical", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Axis placement is incorrect..
        /// </summary>
        internal static string InvalidAxisPlacement {
            get {
                return ResourceManager.GetString("InvalidAxisPlacement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} can hold axis only of {1} type..
        /// </summary>
        internal static string InvalidGenericAxis {
            get {
                return ResourceManager.GetString("InvalidGenericAxis", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Invalid value of child&apos;s parent plotter - it should be equal to plotter that child is added to..
        /// </summary>
        internal static string InvalidParentPlotterValue {
            get {
                return ResourceManager.GetString("InvalidParentPlotterValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Invalid value of child&apos;s parent plotter - it should be equal to plotter that child is being removed from..
        /// </summary>
        internal static string InvalidParentPlotterValueRemoving {
            get {
                return ResourceManager.GetString("InvalidParentPlotterValueRemoving", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Input data must be more detailized to build isolines..
        /// </summary>
        internal static string IsolinesDataIsUndetailized {
            get {
                return ResourceManager.GetString("IsolinesDataIsUndetailized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Data source should be set before building isolines..
        /// </summary>
        internal static string IsolinesDataSourceShouldBeSet {
            get {
                return ResourceManager.GetString("IsolinesDataSourceShouldBeSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Possible mistake: unsupported case in isoline building..
        /// </summary>
        internal static string IsolinesUnsupportedCase {
            get {
                return ResourceManager.GetString("IsolinesUnsupportedCase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Value is not between values in corners..
        /// </summary>
        internal static string IsolinesValueIsOutOfCell {
            get {
                return ResourceManager.GetString("IsolinesValueIsOutOfCell", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Length of colors should be greater or equal to 2..
        /// </summary>
        internal static string PaletteTooFewColors {
            get {
                return ResourceManager.GetString("PaletteTooFewColors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Parameter should be positive..
        /// </summary>
        internal static string ParameterShouldBePositive {
            get {
                return ResourceManager.GetString("ParameterShouldBePositive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Child&apos;s parent plotter should be equal to null after it was removed from plotter..
        /// </summary>
        internal static string ParentPlotterNotNull {
            get {
                return ResourceManager.GetString("ParentPlotterNotNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Cannot add item to Plotter - first it should be removed from another Plotter..
        /// </summary>
        internal static string PlotterElementAddedToAnotherPlotter {
            get {
                return ResourceManager.GetString("PlotterElementAddedToAnotherPlotter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на IPlotterElement {0} did not removed all its contents from plotter&apos;s visual tree. Change this wrong behaviour in OnPlotterDetaching method of this IPlotterElement..
        /// </summary>
        internal static string PlotterElementDidnotCleanedAfterItself {
            get {
                return ResourceManager.GetString("PlotterElementDidnotCleanedAfterItself", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Text of tick returned by GetStringCore should not be null..
        /// </summary>
        internal static string TextOfTickShouldNotBeNull {
            get {
                return ResourceManager.GetString("TextOfTickShouldNotBeNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ticks cannot be generated for this range..
        /// </summary>
        internal static string UnsupportedRangeInAxis {
            get {
                return ResourceManager.GetString("UnsupportedRangeInAxis", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Vertical axis can be placed only from left or right..
        /// </summary>
        internal static string VerticalAxisCannotBeHorizontal {
            get {
                return ResourceManager.GetString("VerticalAxisCannotBeHorizontal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Wrong state of VisualBindings..
        /// </summary>
        internal static string VisualBindingsWrongState {
            get {
                return ResourceManager.GetString("VisualBindingsWrongState", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Width and height cannot be negative..
        /// </summary>
        internal static string WidthAndHeightCannotBeNegative {
            get {
                return ResourceManager.GetString("WidthAndHeightCannotBeNegative", resourceCulture);
            }
        }
    }
}
